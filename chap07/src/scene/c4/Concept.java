package scene.c4;

// <7.4> 메소드 재정의

public class Concept {

	// 부모 클래스의 모든 메소드가 자식 클래스에게 맞게 설계되어 있다면 좋지만,
	// 어떤 메소드는 자식 클래스가 사용하기에 적합하지 않을 수도 있다.
	// 적합하지 않은 그 메소드들을 자식 클래스에서 수정해서 사용해야 한다.
	// => 메소드 오버라이딩을 통해 수정이 가능하다!
	
// <7.4.1> 메소드 재정의 @Override
	// 메소드 오버라이딩은 부모 클래스로부터 상속된 메소드의 내용이 자식 클래스에 맞지 않을 경우,
	// 자식 클래스에서 동일한 메소드를 재정의하는 것
	
	// 메소드를 오버라이딩하면 부모 객체의 메소드는 숨겨지기 떄문에,
	// 자식 객체에서 메소드를 호출하면 오버라이딩된 자식 메소드가 호출된다.
	
	// 오버라이딩 규칙
	// 1) 부모의 메소드와 동일한 시그너처(리턴 타입, 메소드 이름, 매개 변수)를 가져야 한다.
	// 2) 접근 제한을 더 강하게 수정 불가능. ex) public -> default 불가능, 반대의 경우는 가능
	// 3) 새로운 예외를 throws 할 수 없다.
	
// <7.4.2> 부모 메소드 호출(super)
	// 자식 클래스에서 부모 클래스의 메소드를 오버라이딩 하게되면,
	// 부모 메소드는 숨겨지고 오버라이딩된 자식 메소드만 사용된다.
	
	// 자식 클래스 내부에서 오버라이딩된 부모 클래스의 메소드를 호출해야 하는 상황이 발생한다면
	// 명시적으로 super 키워드를 붙여 부모 메소드를 호출할 수 있다.
	
	
	
	
	
	
	
	
	
}
